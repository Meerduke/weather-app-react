{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherIcons from \"./WeatherIcons\";\nimport \"./Forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function showForecast(response) {\n    console.log(response);\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [\"Monday\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WeatherIcons, {\n          code: forecast.list[0].weather[0].icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.round(forecast.list[0].main.temp_max), \"\\xB0C | \", Math.round(forecast.list[0].main.temp_min), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"max | min\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = `aae79086babd8e5274d8186968279eae`;\n    let url = `https:api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showForecast);\n    return null;\n  }\n}\n\n_s(Forecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/Forecast.js"],"names":["React","useState","axios","WeatherIcons","Forecast","props","loaded","setLoaded","forecast","setForecast","showForecast","response","console","log","data","list","weather","icon","Math","round","main","temp_max","temp_min","apiKey","url","city","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,gBAAP;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBN,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;;AAED,WAASS,YAAT,CAAsBC,QAAtB,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAF,IAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAEA,MAAGD,MAAH,EAAU;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,0CAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEE,QAAQ,CAACO,IAAT,CAAc,CAAd,EAAiBC,OAAjB,CAAyB,CAAzB,EAA4BC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,qBACKC,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAACO,IAAT,CAAc,CAAd,EAAiBK,IAAjB,CAAsBC,QAAjC,CADL,cACsDH,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAACO,IAAT,CAAc,CAAd,EAAiBK,IAAjB,CAAsBE,QAAjC,CADtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBA,MAgBI;AACD,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAI,oDAAmDnB,KAAK,CAACoB,IAAK,UAASF,MAAO,eAAzF;AACArB,IAAAA,KAAK,CAACwB,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBjB,YAApB;AAEA,WAAO,IAAP;AACH;AACA;;GAjCuBN,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherIcons from \"./WeatherIcons\";\n\nimport \"./Forecast.css\";\n\n\nexport default function Forecast(props){\n const [loaded, setLoaded]= useState(false);\n const [forecast, setForecast] =useState(null);   \n\nfunction showForecast(response){\n    console.log(response);\n    setForecast(response.data);\n    setLoaded(true);\n}\n\n if(loaded){\n    return(\n        <div className=\"row Forecast\">\n                <div className=\"col\">\n                    Monday\n                    <br />\n                    <WeatherIcons code={forecast.list[0].weather[0].icon}/>\n                    <span>\n                        {Math.round(forecast.list[0].main.temp_max)}°C | {Math.round(forecast.list[0].main.temp_min)}°C\n                    </span>\n                    <span>\n                        max | min\n                    </span>\n                </div>\n        </div>\n);\n}else{\n    let apiKey =`aae79086babd8e5274d8186968279eae`;\n    let url = `https:api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showForecast);\n    \n    return null;\n}\n}"]},"metadata":{},"sourceType":"module"}