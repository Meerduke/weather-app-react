{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/FormattedDate.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormattedDate(props) {\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[props.date.getDay()];\n  let date = props.date.getDate();\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let month = months[props.date.getMonth()];\n  let hours = props.date.getHours();\n\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let minutes = props.date.getMinutes();\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  if (props.forecast === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [day, \" \", date, \" \", month, \"  \", hours, \":\", minutes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }, this);\n  }\n}\n_c = FormattedDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormattedDate\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/FormattedDate.js"],"names":["React","FormattedDate","props","days","day","date","getDay","getDate","months","month","getMonth","hours","getHours","minutes","getMinutes","forecast"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACxC,MAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAoB,SAApB,EAA+B,WAA/B,EAA4C,UAA5C,EAAwD,QAAxD,EAAkE,UAAlE,CAAX;AACA,MAAIC,GAAG,GAAGD,IAAI,CAACD,KAAK,CAACG,IAAN,CAAWC,MAAX,EAAD,CAAd;AACA,MAAID,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAWE,OAAX,EAAX;AACA,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,MAAIC,KAAK,GAAGD,MAAM,CAACN,KAAK,CAACG,IAAN,CAAWK,QAAX,EAAD,CAAlB;AACA,MAAIC,KAAK,GAAGT,KAAK,CAACG,IAAN,CAAWO,QAAX,EAAZ;;AACI,MAAID,KAAK,GAAG,EAAZ,EAAe;AACXA,IAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACH;;AACL,MAAIE,OAAO,GAAGX,KAAK,CAACG,IAAN,CAAWS,UAAX,EAAd;;AACI,MAAID,OAAO,GAAG,EAAd,EAAiB;AACbA,IAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACH;;AAEL,MAAIX,KAAK,CAACa,QAAN,KAAmB,IAAvB,EAA6B;AACzB,wBAAS;AAAA,gBACIX;AADJ;AAAA;AAAA;AAAA;AAAA,YAAT;AAGC,GAJL,MAIS;AACL,wBAAS;AAAA,iBACRA,GADQ,OACFC,IADE,OACKI,KADL,QACcE,KADd,OACsBE,OADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAGC;AACR;KAxBuBZ,a","sourcesContent":["import React from \"react\";\n\nexport default function FormattedDate(props){\n    let days = [\"Sunday\", \"Monday\",\"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    let day = days[props.date.getDay()];\n    let date = props.date.getDate();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let month = months[props.date.getMonth()];\n    let hours = props.date.getHours();\n        if (hours < 10){\n            hours = `0${hours}`;\n        }\n    let minutes = props.date.getMinutes();\n        if (minutes < 10){\n            minutes = `0${minutes}`;\n        }\n        \n    if (props.forecast === true) {\n        return ( <div>\n                    {day}\n                 </div>)\n        }else{\n        return ( <div>\n        {day} {date} {month}  {hours}:{minutes}\n        </div>)\n        }\n}"]},"metadata":{},"sourceType":"module"}