{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherConditions from \"./WeatherConditions\";\nimport Forecast from \"./Forecast\";\nimport Footer from \"./Footer\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weather, setWeather] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.city);\n\n  function showWeather(response) {\n    setWeather({\n      ready: true,\n      temperature: response.data.main.temp,\n      icon: response.data.weather[0].icon,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name\n    });\n  }\n\n  function search() {\n    let apiKey = `aae79086babd8e5274d8186968279eae`;\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showWeather);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  function showCity(response) {\n    console.log(response.data.list[0].name);\n    search(response.data.list[0].name);\n  }\n\n  function showPosition(position) {\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let apiKey = `aae79086babd8e5274d8186968279eae`;\n    let cityCount = 1;\n    let currentCityUrl = `https://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&cnt=${cityCount}&appid=${apiKey}&units=metric`;\n    axios.get(currentCityUrl).then(showCity);\n  }\n\n  function getCurrentLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(showPosition);\n  }\n\n  if (weather.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current weather in \", weather.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(WeatherConditions, {\n        data: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row change-location\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"change-city\",\n              className: \"col-form-label\",\n              children: \"Change your location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter city\",\n              autoComplete: \"off\",\n              autoFocus: \"on\",\n              onChange: handleCitySearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto search-button\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onSubmit: handleSubmit,\n              type: \"submit\",\n              className: \"btn btn-info w-100\",\n              value: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn btn-info w-100\",\n              value: \"Current Location\",\n              onClick: getCurrentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this);\n  } else {\n    search();\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }, this);\n  }\n}\n\n_s(Weather, \"h92mLDrQ2enXuwiOX1fULFTymwU=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/Weather.js"],"names":["React","useState","axios","WeatherConditions","Forecast","Footer","Weather","props","weather","setWeather","ready","city","setCity","showWeather","response","temperature","data","main","temp","icon","date","Date","dt","description","humidity","wind","speed","name","search","apiKey","url","get","then","handleSubmit","event","preventDefault","handleCitySearch","target","value","showCity","console","log","list","showPosition","position","lat","coords","latitude","lon","longitude","cityCount","currentCityUrl","getCurrentLocation","navigator","geolocation","getCurrentPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAE;AAAT,GAAD,CAArC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACM,KAAK,CAACI,IAAP,CAAhC;;AAEA,WAASE,WAAT,CAAqBC,QAArB,EAA8B;AAC5BL,IAAAA,UAAU,CAAC;AACTC,MAAAA,KAAK,EAAE,IADE;AAETK,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,IAFvB;AAGTC,MAAAA,IAAI,EAAEL,QAAQ,CAACE,IAAT,CAAcR,OAAd,CAAsB,CAAtB,EAAyBW,IAHtB;AAITC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASP,QAAQ,CAACE,IAAT,CAAcM,EAAd,GAAiB,IAA1B,CAJG;AAKTC,MAAAA,WAAW,EAAET,QAAQ,CAACE,IAAT,CAAcR,OAAd,CAAsB,CAAtB,EAAyBe,WAL7B;AAMTC,MAAAA,QAAQ,EAAEV,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBO,QANpB;AAOTC,MAAAA,IAAI,EAAEX,QAAQ,CAACE,IAAT,CAAcS,IAAd,CAAmBC,KAPhB;AAQTf,MAAAA,IAAI,EAAEG,QAAQ,CAACE,IAAT,CAAcW;AARX,KAAD,CAAV;AAWH;;AAED,WAASC,MAAT,GAAiB;AACf,QAAIC,MAAM,GAAI,kCAAd;AACA,QAAIC,GAAG,GAAI,qDAAoDnB,IAAK,UAASkB,MAAO,eAApF;AACA3B,IAAAA,KAAK,CAAC6B,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBnB,WAApB;AACD;;AAED,WAASoB,YAAT,CAAsBC,KAAtB,EAA4B;AACtBA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,MAAM;AACT;;AAEH,WAASQ,gBAAT,CAA0BF,KAA1B,EAAgC;AAC9BtB,IAAAA,OAAO,CAACsB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASC,QAAT,CAAkBzB,QAAlB,EAA4B;AAC1B0B,IAAAA,OAAO,CAACC,GAAR,CAAY3B,QAAQ,CAACE,IAAT,CAAc0B,IAAd,CAAmB,CAAnB,EAAsBf,IAAlC;AACAC,IAAAA,MAAM,CAACd,QAAQ,CAACE,IAAT,CAAc0B,IAAd,CAAmB,CAAnB,EAAsBf,IAAvB,CAAN;AACD;;AAED,WAASgB,YAAT,CAAuBC,QAAvB,EAAiC;AAC/B,QAAIC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA1B;AACA,QAAIC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA1B;AACA,QAAIpB,MAAM,GAAI,kCAAd;AACA,QAAIqB,SAAS,GAAG,CAAhB;AACA,QAAIC,cAAc,GAAI,oDAAmDN,GAAI,QAAOG,GAAI,QAAOE,SAAU,UAASrB,MAAO,eAAzH;AACA3B,IAAAA,KAAK,CAAC6B,GAAN,CAAUoB,cAAV,EAA0BnB,IAA1B,CAA+BO,QAA/B;AACD;;AAED,WAASa,kBAAT,CAA4BlB,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAkB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCZ,YAAzC;AACD;;AAED,MAAInC,OAAO,CAACE,KAAZ,EAAmB;AACjB,wBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,0CAAwBF,OAAO,CAACG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAME,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,eAWE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEyB,YAAjC;AAAA,+BACU;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAO,cAAA,GAAG,EAAC,aAAX;AAAyB,cAAA,SAAS,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,SAAS,EAAC,cAFZ;AAGE,cAAA,WAAW,EAAC,YAHd;AAIE,cAAA,YAAY,EAAC,KAJf;AAKE,cAAA,SAAS,EAAC,IALZ;AAME,cAAA,QAAQ,EAAEG;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eAgBE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACE;AAAO,cAAA,QAAQ,EAAEH,YAAjB;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,oBAFZ;AAGE,cAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAuBE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACG;AACC,cAAA,IAAI,EAAC,QADN;AAEC,cAAA,SAAS,EAAC,oBAFX;AAGC,cAAA,KAAK,EAAC,kBAHP;AAIC,cAAA,OAAO,EAAEmB;AAJV;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,cAXF,eA8CE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAmDD,GApDD,MAoDO;AACLxB,IAAAA,MAAM;AACN,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAGA;AACD;;GA9GuBtB,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherConditions from \"./WeatherConditions\";\nimport Forecast from \"./Forecast\";\nimport Footer from \"./Footer\";\n\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weather,setWeather] = useState({ ready: false });\n  const [city, setCity] = useState(props.city);\n  \n  function showWeather(response){\n    setWeather({\n      ready: true,\n      temperature: response.data.main.temp,\n      icon: response.data.weather[0].icon,\n      date: new Date(response.data.dt*1000),\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name\n  } \n  );\n}\n\nfunction search(){\n  let apiKey = `aae79086babd8e5274d8186968279eae`;\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n  axios.get(url).then(showWeather);\n}\n\nfunction handleSubmit(event){\n      event.preventDefault();\n      search();\n  }\n\nfunction handleCitySearch(event){\n  setCity(event.target.value);\n}  \n\nfunction showCity(response) {\n  console.log(response.data.list[0].name);\n  search(response.data.list[0].name);\n}\n\nfunction showPosition (position) {\n  let lat = position.coords.latitude;\n  let lon = position.coords.longitude;\n  let apiKey = `aae79086babd8e5274d8186968279eae`;\n  let cityCount = 1;\n  let currentCityUrl = `https://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&cnt=${cityCount}&appid=${apiKey}&units=metric`;\n  axios.get(currentCityUrl).then(showCity);\n}\n\nfunction getCurrentLocation(event) {\n  event.preventDefault();\n  navigator.geolocation.getCurrentPosition(showPosition);\n}\n\nif (weather.ready) {\n  return(\n  <div className=\"Weather\">\n\n      <h1>Weather Forecast</h1>\n\n      <h2>Current weather in {weather.city}</h2>\n\n    <WeatherConditions data={weather}/>\n    <Forecast />\n\n    <hr />\n\n    <form className=\"Form\" onSubmit={handleSubmit}>\n              <div className=\"row change-location\">\n                <div className=\"col-auto\">\n                  <label for=\"change-city\" className=\"col-form-label\">\n                   Change your location\n                  </label>\n                </div>\n                <div className=\"col-auto\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter city\"\n                    autoComplete=\"off\"\n                    autoFocus=\"on\"\n                    onChange={handleCitySearch}\n                  />\n                </div>\n                <div className=\"col-auto search-button\">\n                  <input onSubmit={handleSubmit}\n                    type=\"submit\"\n                    className=\"btn btn-info w-100\"\n                    value=\"Search\"\n                  />\n                </div>\n                <div className=\"col-auto\">\n                   <input\n                    type=\"submit\"\n                    className=\"btn btn-info w-100\"\n                    value=\"Current Location\"\n                    onClick={getCurrentLocation}\n                  />\n                </div>\n             </div>\n    </form>\n\n    <Footer />  \n\n  </div>\n  );\n} else {\n  search();\n  return (\n  <p>Loading...</p>\n   );\n }\n}\n"]},"metadata":{},"sourceType":"module"}