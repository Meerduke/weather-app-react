{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ForecastPreview from \"./ForecastPreview\";\nimport \"./Forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function showForecast(response) {\n    console.log(response.data);\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && props.city === forecast.city.name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast row\",\n      children: forecast.list.slice(0, 5).map(function (forecastItem) {\n        return /*#__PURE__*/_jsxDEV(ForecastPreview, {\n          data: forecastItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = `aae79086babd8e5274d8186968279eae`;\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showForecast);\n    return null;\n  }\n}\n\n_s(Forecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/Forecast.js"],"names":["React","useState","axios","ForecastPreview","Forecast","props","loaded","setLoaded","forecast","setForecast","showForecast","response","console","log","data","city","name","list","slice","map","forecastItem","apiKey","url","lat","lon","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,gBAAP;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBN,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;;AAED,WAASS,YAAT,CAAsBC,QAAtB,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAL,IAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAEA,MAAGD,MAAM,IAAID,KAAK,CAACU,IAAN,KAAeP,QAAQ,CAACO,IAAT,CAAcC,IAA1C,EAA+C;AAC5C,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKR,QAAQ,CAACS,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA8B,UAAUC,YAAV,EAAwB;AACnD,4BAAO,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARA,MAQI;AACD,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAI,uDAAsDjB,KAAK,CAACkB,GAAI,QAAOlB,KAAK,CAACmB,GAAI,UAASH,MAAO,eAA5G;AACAnB,IAAAA,KAAK,CAACuB,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoBhB,YAApB;AAEA,WAAO,IAAP;AACH;AACA;;GAzBuBN,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ForecastPreview from \"./ForecastPreview\";\n\nimport \"./Forecast.css\";\n\n\nexport default function Forecast(props){\n const [loaded, setLoaded]= useState(false);\n const [forecast, setForecast] =useState(null);   \n\nfunction showForecast(response){\n    console.log(response.data);\n    setForecast(response.data);\n    setLoaded(true);\n}\n\n if(loaded && props.city === forecast.city.name){\n    return(\n        <div className=\"Forecast row\">\n            {forecast.list.slice(0, 5).map(function (forecastItem) {\n                return <ForecastPreview data={forecastItem}/>;\n            })} \n        </div>\n);\n}else{\n    let apiKey =`aae79086babd8e5274d8186968279eae`;\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showForecast);\n    \n    return null;\n}\n}"]},"metadata":{},"sourceType":"module"}