{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/ForecastPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherIcons from \"./WeatherIcons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastPreview(props) {\n  _s();\n\n  const [unit, setUnit] = useState(\"celsius\");\n  console.log(props.data);\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  if (unit === \"celsius\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastPreview col\",\n      children: [/*#__PURE__*/_jsxDEV(FormattedDate, {\n        date: new Date(props.data.dt * 1000),\n        forecast: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherIcons, {\n        code: props.data.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Math.round(props.data.temp)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        href: \"/\",\n        children: \"\\xB0C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), \"\", \" | \", \"\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        onClick: showFahrenheit,\n        children: \"\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastPreview col\",\n      children: [/*#__PURE__*/_jsxDEV(FormattedDate, {\n        date: new Date(props.data.dt * 1000),\n        forecast: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherIcons, {\n        code: props.data.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Math.round(props.data.temp.day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        href: \"/\",\n        children: \"\\xB0C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), \"\", \" | \", \"\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        onClick: showCelsius,\n        children: \"\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(ForecastPreview, \"n67kjtGMfKwprJ+mcpfrwxWUTPs=\");\n\n_c = ForecastPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastPreview\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/ForecastPreview.js"],"names":["React","useState","FormattedDate","WeatherIcons","ForecastPreview","props","unit","setUnit","console","log","data","showFahrenheit","event","preventDefault","showCelsius","Date","dt","weather","icon","Math","round","temp","day"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,SAAD,CAAhC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAlB;;AAEA,WAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,OAAO,CAAC,YAAD,CAAP;AACH;;AAED,WAASO,WAAT,CAAqBF,KAArB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,OAAO,CAAC,SAAD,CAAP;AACH;;AAGH,MAAID,IAAI,KAAK,SAAb,EAAuB;AACnB,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACoB,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,IAAIS,IAAJ,CAASV,KAAK,CAACK,IAAN,CAAWM,EAAX,GAAc,IAAvB,CAArB;AAAmD,QAAA,QAAQ,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,cADpB,eAEgB;AAAA;AAAA;AAAA;AAAA,cAFhB,eAGoB,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEX,KAAK,CAACK,IAAN,CAAWO,OAAX,CAAmB,CAAnB,EAAsBC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHpB,eAIgB;AAAA,kBACKC,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACK,IAAN,CAAWW,IAAtB;AADL;AAAA;AAAA;AAAA;AAAA,cAJhB,eAOgB;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPhB,EAUqB,EAVrB,SAU4B,EAV5B,eAWgB;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAEV,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAiBH,GAlBD,MAkBK;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACgB,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,IAAII,IAAJ,CAASV,KAAK,CAACK,IAAN,CAAWM,EAAX,GAAc,IAAvB,CAArB;AAAmD,QAAA,QAAQ,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,cADhB,eAEY;AAAA;AAAA;AAAA;AAAA,cAFZ,eAGgB,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEX,KAAK,CAACK,IAAN,CAAWO,OAAX,CAAmB,CAAnB,EAAsBC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHhB,eAIY;AAAA,kBACKC,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACK,IAAN,CAAWW,IAAX,CAAgBC,GAA3B;AADL;AAAA;AAAA;AAAA;AAAA,cAJZ,eAOY;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPZ,EAUiB,EAVjB,SAUwB,EAVxB,eAWY;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAER,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;AACA;;GArDuBV,e;;KAAAA,e","sourcesContent":["import React,{ useState } from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherIcons from \"./WeatherIcons\";\n\nexport default function ForecastPreview(props){\n    const [unit, setUnit] = useState(\"celsius\");\n    console.log(props.data);\n\n    function showFahrenheit(event){\n      event.preventDefault();\n      setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event){\n      event.preventDefault();\n      setUnit(\"celsius\");\n  }\n\n\nif (unit === \"celsius\"){\n    return(\n    <div className=\"ForecastPreview col\">\n                        <FormattedDate date={new Date(props.data.dt*1000)} forecast={true}/>\n                    <br />\n                        <WeatherIcons code={props.data.weather[0].icon}/>\n                    <span>\n                        {Math.round(props.data.temp)}\n                    </span>\n                    <span href=\"/\">\n                         째C\n                    </span>\n                        {\"\"} | {\"\"}\n                    <a href=\"/\" onClick={showFahrenheit}>\n                         째F\n                    </a> \n             </div>\n    );\n}else{\n    return(\n        <div className=\"ForecastPreview col\">\n                        <FormattedDate date={new Date(props.data.dt*1000)} forecast={true}/>\n                    <br />\n                        <WeatherIcons code={props.data.weather[0].icon}/>\n                    <span>\n                        {Math.round(props.data.temp.day)}\n                    </span>\n                    <span href=\"/\">\n                         째C\n                    </span>\n                        {\"\"} | {\"\"}\n                    <a href=\"/\" onClick={showCelsius}>\n                         째F\n                    </a> \n             </div>\n    )\n\n}\n}"]},"metadata":{},"sourceType":"module"}