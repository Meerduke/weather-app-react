{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/ForecastPreview.js\";\nimport React from \"react\";\nimport WeatherIcons from \"./WeatherIcons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastPreview(props) {\n  function hours() {\n    console.log(new Date(props.data.dt * 1000));\n    let date = new Date(props.data.dt * 1000);\n    let hours = date.getHours();\n\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    return `${hours}:00`;\n  }\n\n  function temperature() {\n    let maxTemp = Math.round(props.data.main.temp_max);\n    let minTemp = Math.round(props.data.main.temp_min);\n    return `${maxTemp}째C | ${minTemp}째C`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ForecastPreview col\",\n    children: [hours(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(WeatherIcons, {\n      code: props.data.weather[0].icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: temperature()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"max | min\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n_c = ForecastPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastPreview\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/ForecastPreview.js"],"names":["React","WeatherIcons","ForecastPreview","props","hours","console","log","Date","data","dt","date","getHours","temperature","maxTemp","Math","round","main","temp_max","minTemp","temp_min","weather","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAE5C,WAASC,KAAT,GAAgB;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASJ,KAAK,CAACK,IAAN,CAAWC,EAAX,GAAc,IAAvB,CAAZ;AACA,QAAIC,IAAI,GAAG,IAAIH,IAAJ,CAASJ,KAAK,CAACK,IAAN,CAAWC,EAAX,GAAc,IAAvB,CAAX;AACA,QAAIL,KAAK,GAAGM,IAAI,CAACC,QAAL,EAAZ;;AACE,QAAIP,KAAK,GAAG,EAAZ,EAAe;AACXA,MAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACF;;AACJ,WAAQ,GAAEA,KAAM,KAAhB;AACH;;AAED,WAASQ,WAAT,GAAsB;AAClB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWZ,KAAK,CAACK,IAAN,CAAWQ,IAAX,CAAgBC,QAA3B,CAAd;AACA,QAAIC,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWZ,KAAK,CAACK,IAAN,CAAWQ,IAAX,CAAgBG,QAA3B,CAAd;AACA,WAAQ,GAAEN,OAAQ,QAAOK,OAAQ,IAAjC;AACH;;AAEC,sBAAO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,eAEcd,KAAK,EAFnB,eAGS;AAAA;AAAA;AAAA;AAAA,YAHT,eAIa,QAAC,YAAD;AAAc,MAAA,IAAI,EAAED,KAAK,CAACK,IAAN,CAAWY,OAAX,CAAmB,CAAnB,EAAsBC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJb,eAKS;AAAA,gBACKT,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,YALT,eAQS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YART;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH;KA9BuBV,e","sourcesContent":["import React from \"react\";\nimport WeatherIcons from \"./WeatherIcons\";\n\nexport default function ForecastPreview(props){\n\n  function hours(){\n      console.log(new Date(props.data.dt*1000));\n      let date = new Date(props.data.dt*1000);\n      let hours = date.getHours();\n        if (hours < 10){\n            hours = `0${hours}`;\n         }\n      return `${hours}:00`;\n  }\n\n  function temperature(){\n      let maxTemp = Math.round(props.data.main.temp_max);\n      let minTemp = Math.round(props.data.main.temp_min);\n      return `${maxTemp}째C | ${minTemp}째C`\n  }\n\n    return <div className=\"ForecastPreview col\">\n                \n                        {hours()}\n                    <br />\n                        <WeatherIcons code={props.data.weather[0].icon}/>\n                    <span>\n                        {temperature()}\n                    </span>\n                    <div>\n                        max | min\n                    </div>\n            </div>\n}"]},"metadata":{},"sourceType":"module"}