{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/ForecastPreview.js\";\nimport React from \"react\";\nimport WeatherIcons from \"./WeatherIcons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastPreview(props) {\n  function hours() {\n    let date = new Date(props.data.dt * 1000);\n    let hours = date.getHours();\n\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    return `${hours}:00`;\n  }\n\n  function temperature() {\n    let maxTemp = Math.round(props.data.main.temp_max);\n    let minTemp = Math.round(props.data.main.temp_min);\n    return `${maxTemp}째C | ${minTemp}째C`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row ForecastPreview\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [hours(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WeatherIcons, {\n        code: props.data.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: temperature()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"max | min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n_c = ForecastPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastPreview\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/ForecastPreview.js"],"names":["React","WeatherIcons","ForecastPreview","props","hours","date","Date","data","dt","getHours","temperature","maxTemp","Math","round","main","temp_max","minTemp","temp_min","weather","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAE5C,WAASC,KAAT,GAAgB;AACZ,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAACI,IAAN,CAAWC,EAAX,GAAc,IAAvB,CAAX;AACA,QAAIJ,KAAK,GAAGC,IAAI,CAACI,QAAL,EAAZ;;AACE,QAAIL,KAAK,GAAG,EAAZ,EAAe;AACXA,MAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACF;;AACJ,WAAQ,GAAEA,KAAM,KAAhB;AACH;;AAED,WAASM,WAAT,GAAsB;AAClB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACI,IAAN,CAAWO,IAAX,CAAgBC,QAA3B,CAAd;AACA,QAAIC,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACI,IAAN,CAAWO,IAAX,CAAgBG,QAA3B,CAAd;AACA,WAAQ,GAAEN,OAAQ,QAAOK,OAAQ,IAAjC;AACH;;AAEC,sBAAO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACK;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACSZ,KAAK,EADd,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGQ,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,KAAK,CAACI,IAAN,CAAWW,OAAX,CAAmB,CAAnB,EAAsBC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHR,eAII;AAAA,kBACKT,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;KA9BuBR,e","sourcesContent":["import React from \"react\";\nimport WeatherIcons from \"./WeatherIcons\";\n\nexport default function ForecastPreview(props){\n\n  function hours(){\n      let date = new Date(props.data.dt*1000);\n      let hours = date.getHours();\n        if (hours < 10){\n            hours = `0${hours}`;\n         }\n      return `${hours}:00`;\n  }\n\n  function temperature(){\n      let maxTemp = Math.round(props.data.main.temp_max);\n      let minTemp = Math.round(props.data.main.temp_min);\n      return `${maxTemp}째C | ${minTemp}째C`\n  }\n\n    return <div className=\"row ForecastPreview\">\n                <div className=\"col\">\n                        {hours()}\n                    <br />\n                        <WeatherIcons code={props.data.weather[0].icon}/>\n                    <span>\n                        {temperature()}\n                    </span>\n                    <div>\n                        max | min\n                    </div>\n                </div>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}