{"ast":null,"code":"var _jsxFileName = \"/Users/Becca/Desktop/SheCodes/weather-app-react/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ForecastPreview from \"./ForecastPreview\";\nimport \"./Forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function showForecast(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && props.city === forecast.city.name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast row\",\n      children: [/*#__PURE__*/_jsxDEV(ForecastPreview, {\n        data: forecast.list[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ForecastPreview, {\n        data: forecast.list[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ForecastPreview, {\n        data: forecast.list[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ForecastPreview, {\n        data: forecast.list[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ForecastPreview, {\n        data: forecast.list[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = `aae79086babd8e5274d8186968279eae`;\n    let url = `https:api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showForecast);\n    return null;\n  }\n}\n\n_s(Forecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/Becca/Desktop/SheCodes/weather-app-react/src/Forecast.js"],"names":["React","useState","axios","ForecastPreview","Forecast","props","loaded","setLoaded","forecast","setForecast","showForecast","response","data","city","name","list","apiKey","url","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,gBAAP;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBN,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;;AAED,WAASS,YAAT,CAAsBC,QAAtB,EAA+B;AAC3BF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAEA,MAAGD,MAAM,IAAID,KAAK,CAACQ,IAAN,KAAeL,QAAQ,CAACK,IAAT,CAAcC,IAA1C,EAA+C;AAC5C,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEN,QAAQ,CAACO,IAAT,CAAc,CAAd;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd;AAAvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXA,MAWI;AACD,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAI,oDAAmDZ,KAAK,CAACQ,IAAK,UAASG,MAAO,eAAzF;AACAd,IAAAA,KAAK,CAACgB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBT,YAApB;AAEA,WAAO,IAAP;AACH;AACA;;GA3BuBN,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ForecastPreview from \"./ForecastPreview\";\n\nimport \"./Forecast.css\";\n\n\nexport default function Forecast(props){\n const [loaded, setLoaded]= useState(false);\n const [forecast, setForecast] =useState(null);   \n\nfunction showForecast(response){\n    setForecast(response.data);\n    setLoaded(true);\n}\n\n if(loaded && props.city === forecast.city.name){\n    return(\n        <div className=\"Forecast row\">\n            <ForecastPreview data={forecast.list[0]}/>\n            <ForecastPreview data={forecast.list[1]}/>\n            <ForecastPreview data={forecast.list[2]}/>\n            <ForecastPreview data={forecast.list[3]}/>\n            <ForecastPreview data={forecast.list[4]}/>\n            \n        </div>\n);\n}else{\n    let apiKey =`aae79086babd8e5274d8186968279eae`;\n    let url = `https:api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showForecast);\n    \n    return null;\n}\n}"]},"metadata":{},"sourceType":"module"}